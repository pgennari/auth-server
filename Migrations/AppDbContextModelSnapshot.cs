// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using auth_server.Data;

#nullable disable

namespace auth_server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("auth_server.Models.NotificationRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("MessageId")
                        .HasColumnType("text");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TopicArn")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NotificationRecords");
                });

            modelBuilder.Entity("auth_server.Models.Otp", b =>
                {
                    b.Property<string>("peopleId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("expiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("otp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("peopleId");

                    b.ToTable("Otps");
                });

            modelBuilder.Entity("auth_server.Models.User", b =>
                {
                    b.Property<string>("peopleId")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("socialName")
                        .HasColumnType("text");

                    b.HasKey("peopleId");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
